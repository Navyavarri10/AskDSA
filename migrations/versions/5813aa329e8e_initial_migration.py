"""Initial migration.

Revision ID: 5813aa329e8e
Revises: 
Create Date: 2025-07-04 17:47:10.226908

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5813aa329e8e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tag',
    sa.Column('tagId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('label', sa.String(length=25), nullable=False),
    sa.PrimaryKeyConstraint('tagId'),
    sa.UniqueConstraint('label')
    )
    op.create_table('user',
    sa.Column('userId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('userName', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=120), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('userId'),
    sa.UniqueConstraint('email')
    )
    op.create_table('question',
    sa.Column('questionId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('body', sa.String(length=1000), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.Column('likesCount', sa.Integer(), nullable=True),
    sa.Column('viewsCount', sa.Integer(), nullable=True),
    sa.Column('commentsCount', sa.Integer(), nullable=True),
    sa.Column('latestCommentDate', sa.DateTime(), nullable=True),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['user.userId'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('questionId')
    )
    op.create_table('searchhistory',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('tagId', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('lastUsedAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tagId'], ['tag.tagId'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userId'], ['user.userId'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userprofile',
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('about', sa.String(length=500), nullable=True),
    sa.Column('github', sa.String(length=255), nullable=True),
    sa.Column('leetcode', sa.String(length=255), nullable=True),
    sa.Column('questionsCount', sa.Integer(), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['user.userId'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('userId')
    )
    op.create_table('comment',
    sa.Column('commentId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('body', sa.String(length=255), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.Column('likesCount', sa.Integer(), nullable=True),
    sa.Column('numOfReplies', sa.Integer(), nullable=True),
    sa.Column('parentId', sa.Integer(), nullable=True),
    sa.Column('questionId', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['parentId'], ['comment.commentId'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['questionId'], ['question.questionId'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userId'], ['user.userId'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('commentId')
    )
    op.create_table('questionlike',
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('questionId', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['questionId'], ['question.questionId'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userId'], ['user.userId'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('userId', 'questionId')
    )
    op.create_table('questiontag',
    sa.Column('questionId', sa.Integer(), nullable=False),
    sa.Column('tagId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['questionId'], ['question.questionId'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tagId'], ['tag.tagId'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('questionId', 'tagId', name='_question_tag_pk')
    )
    op.create_table('commentlike',
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('commentId', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['commentId'], ['comment.commentId'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userId'], ['user.userId'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('userId', 'commentId')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('commentlike')
    op.drop_table('questiontag')
    op.drop_table('questionlike')
    op.drop_table('comment')
    op.drop_table('userprofile')
    op.drop_table('searchhistory')
    op.drop_table('question')
    op.drop_table('user')
    op.drop_table('tag')
    # ### end Alembic commands ###
